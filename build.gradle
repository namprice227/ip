plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.jetbrains.kotlin.jvm' version '2.0.21'
//    id 'checkstyle'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    String javaFxVersion = '17.0.7'
    implementation("org.openjfx:javafx-controls:17.0.7")
    implementation("org.openjfx:javafx-fxml:17.0.7")
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'linux'
}

//checkstyle {
//    toolVersion = '10.2'
//}

//test {
//    useJUnitPlatform()
//
//    testLogging {
//        events "passed", "skipped", "failed"
//
//        showExceptions true
//        exceptionFormat "full"
//        showCauses true
//        showStackTraces true
//        showStandardStreams = false
//    }
//}

application {
    mainClass.set("charlie.Launcher")
}

shadowJar {
    archiveFileName = "charlie.jar"
    archiveClassifier = null
}

run {
    standardInput = System.in
}
kotlin {
    jvmToolchain(17)
}
